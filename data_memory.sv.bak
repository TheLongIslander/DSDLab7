module data_memory(
input logic clk, rst,
input logic [31:0] A,
input logic [31:0] WD,
input logic WE,
output logic[31:0] RD,
output logic[31:0] prode
);

	logic[31:0] memory [0:255];
    
	initial begin
    	for (int i=0; i<256; i++)
        	memory[i] = 32'd0;
	end
    
	assign prode=memory[A[7:0]];
    
	assign RD=memory[A[7:0]];
   	 
	always_ff@(posedge clk or negedge rst) begin
    	if (!rst) begin
        	for (int i=0; i<256; i++) begin
            	memory[i] <= 32'd0;
        	end
    	end else if (WE) begin
        	memory[A[7:0]] <= WD;
    	end
	end

endmodule
